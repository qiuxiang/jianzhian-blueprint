include ../../../mixins/blueprint

- var line_border = 'stroke-width: 3; stroke: gray;'

mixin aisle-2
  +aisle('scaled.aisle_width - 2', 0)
  +ng-line('scaled.aisle_width - 4', 0, 'scaled.aisle_width - 4',
    'scaled.layer - scaled.P * 3 + scaled.aisle_height')(style='stroke-width: 3;')

g(transform='translate(20, 30)')
  // 地线
  +ng-line(-40, 'scaled.layer', 'scaled.height + 150', 'scaled.layer')

  // 房顶
  +ng-line('-metadata.scale * 300', 0, 'scaled.height / 2', '-metadata.scale * 500')
  +ng-line('scaled.height / 2', '-metadata.scale * 500',
           'scaled.height + metadata.scale * 300', 0)
  +ng-line('-metadata.scale * 300', '-metadata.scale * 100',
           'scaled.height / 2', '-metadata.scale * 600')
  +ng-line('scaled.height / 2', '-metadata.scale * 600',
           'scaled.height + metadata.scale * 300', '-metadata.scale * 100')
  +ng-line('-metadata.scale * 300', '-metadata.scale * 100',
           '-metadata.scale * 300', 0)
  +ng-line('scaled.height + metadata.scale * 300', '-metadata.scale * 100',
           'scaled.height + metadata.scale * 300', 0)

  // 屋檐
  g(ng-attr-transform='translate({{scaled.height}}, 0)')
    +ng-line(3, 0, 'scaled.aisle_width', 'metadata.scale * 200')(style=line_border)
    +ng-line(3, 'metadata.scale * 200',
      'scaled.aisle_width', 'metadata.scale * 200')(style=line_border)

  // 走廊
  g(ng-if='metadata.layer > 3'
    ng-attr-transform='translate({{scaled.height + 4}}, {{scaled.P * 3 - scaled.aisle_height}})')
    +aisle-2()
    g(ng-if='metadata.layer > 6'
      ng-attr-transform='translate(0, {{scaled.P * 3}})')
      +aisle('scaled.aisle_width * (1 + has_front_stairs) - 4', 0)
    g(ng-if='has_front_stairs'
      ng-attr-transform='translate({{scaled.aisle_width - 2}}, 0)')
      +aisle-2()
      g(ng-attr-transform='translate(-2, {{scaled.aisle_height}})')
        +ng-rect(0, 0, 'scaled.aisle_width - 2', 'scaled.layer - scaled.P * 3')(
          style='fill: url(#StairsPattern); stroke: none;')

  // 只有两层的楼梯
  g(ng-if='metadata.options.stairs.left && metadata.layer == 6'
    ng-attr-transform='translate({{scaled.height - scaled.K * 2}}, {{scaled.layer - scaled.aisle_height}})')
    +aisle('scaled.K * 2 + 4', '-scaled.K * 1.5 - 6')
    // 栏杆竖线
      g(ng-attr-transform='translate(0, {{-scaled.P * 3}})')
        +ng-line(0, 'scaled.P * 3 + scaled.aisle_height',
          0, 'scaled.P * 3')(style=line_border)
        +ng-line('800 * metadata.scale', 'scaled.P * 3 * 0.75 + scaled.aisle_height',
          '800 * metadata.scale', 'scaled.P * 3 * 0.75')(style=line_border)
        +ng-line('1600 * metadata.scale', 'scaled.P * 3 * 0.5 + scaled.aisle_height + 1',
          '1600 * metadata.scale', 'scaled.P * 3 * 0.5 + 1')(style=line_border)
        +ng-line('2400 * metadata.scale', 'scaled.P * 3 * 0.25 + scaled.aisle_height + 2',
          '2400 * metadata.scale', 'scaled.P * 3 * 0.25 + 2')(style=line_border)

  // 超过两层的楼梯
  g(ng-if='metadata.options.stairs.left && metadata.layer > 6'
    ng-attr-transform='translate({{scaled.height - scaled.K}}, {{scaled.P * 4.5 - scaled.aisle_height}})')
    +ng-line('-scaled.aisle_width', 0, '-scaled.aisle_width',
      'scaled.layer - scaled.P * 4.5 + scaled.aisle_height')(style='stroke-width: 3;')
    g(ng-repeat='layer in metadata.rooms'
      ng-if='!$last'
      ng-attr-transform='translate(0, {{$index * scaled.P * 3}})')
      +aisle('scaled.K + 4', '-scaled.P * 1.5')
      +aisle('scaled.K + 4', 'scaled.P * 1.5')
      g(ng-attr-transform='translate({{-scaled.aisle_width}}, 0)')
        +aisle('scaled.aisle_width', 0)
        +ng-line(0, 0, 0, 'scaled.aisle_height')

  // 主体
  g(ng-repeat='layer in metadata.rooms'
    ng-attr-transform='translate(0, {{scaled.P * $index * 3}})')
    g(ng-repeat='i in _.range(metadata.height)'
      ng-attr-transform='translate({{scaled.K * $index}}, 0)')
      +ng-line(0, 0, 0, 'scaled.P * 3')
      +ng-line(3, 0, 3, 'scaled.P * 3')
      +ng-line(4, 'scaled.P * 0.5', 'scaled.K', 'scaled.P * 2.5')
      +ng-line(4, 'scaled.P * 2.5', 'scaled.K', 'scaled.P * 0.5')
      +ng-line('scaled.K', 0, 'scaled.K', 'scaled.P * 3')(if='$last')
      +ng-line('scaled.K + 3', 0, 'scaled.K + 3', 'scaled.P * 3')(if='$last')
    // 深度为3K时的房顶柱
    g(ng-if='metadata.height == 3 && $first')
      +ng-line(0, 0, 0, '-metadata.scale * 30')
      +ng-line(3, 0, 3, '-metadata.scale * 50')
      +ng-line('scaled.K', 0, 'scaled.K', '-metadata.scale * 330')
      +ng-line('scaled.K + 3', 0, 'scaled.K + 3', '-metadata.scale * 350')
      +ng-line('scaled.K * 2', 0, 'scaled.K * 2', '-metadata.scale * 330')
      +ng-line('scaled.K * 2 + 3', 0, 'scaled.K * 2 + 3', '-metadata.scale * 350')
      +ng-line('scaled.K * 3 + 3', 0, 'scaled.K * 3 + 3', '-metadata.scale * 30')
      +ng-line('scaled.K * 3', 0, 'scaled.K * 3', '-metadata.scale * 50')
    // 深度为4K时的房顶柱
    g(ng-if='metadata.height == 4 && $first')
      +ng-line(0, 0, 0, '-metadata.scale * 30')
      +ng-line(3, 0, 3, '-metadata.scale * 40')
      +ng-line('scaled.K', 0, 'scaled.K', '-metadata.scale * 260')
      +ng-line('scaled.K + 3', 0, 'scaled.K + 3', '-metadata.scale * 270')
      +ng-line('scaled.K * 2', 0, 'scaled.K * 2', '-metadata.scale * 500')
      +ng-line('scaled.K * 2 + 3', 0, 'scaled.K * 2 + 3', '-metadata.scale * 500')
      +ng-line('scaled.K * 3 + 3', 0, 'scaled.K * 3 + 3', '-metadata.scale * 260')
      +ng-line('scaled.K * 3', 0, 'scaled.K * 3', '-metadata.scale * 270')
      +ng-line('scaled.K * 4 + 3', 0, 'scaled.K * 4 + 3', '-metadata.scale * 30')
      +ng-line('scaled.K * 4', 0, 'scaled.K * 4', '-metadata.scale * 40')

  // 标尺
  g(ng-attr-transform='translate(0, {{scaled.layer + 20}})')
    +rulers('letter', 'metadata.height')

