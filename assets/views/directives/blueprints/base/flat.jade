include ../../../mixins/blueprint

- var line_border = 'stroke-width: 3; stroke: gray;'
- var rect_border = 'stroke-width: 1; fill: white;'
- var rect_window = 'stroke: silver; fill: silver;'

// 两层的楼梯
mixin stairs_2(placement)
  - var x = placement == 'left' ? 0 : 'scaled.aisle_width'
  +ng-rect(0, 0, 'scaled.aisle_width', 'scaled.stairs_height')(style='fill: url(#StairsPattern)')
  +ng-line(0, 'scaled.stairs_height + scaled.aisle_width',
    'scaled.aisle_width', 'scaled.stairs_height + scaled.aisle_width')(style=line_border)
  +ng-line(x, 0, x, 'scaled.stairs_height + scaled.aisle_width')(style=line_border)
  g(ng-attr-transform='translate(0, {{scaled.stairs_height + scaled.aisle_width * (1 + has_front_stairs) + 20}})')
    +ruler('bottom', '(scaled.aisle_width - metadata.scale * 80)', 20, '{{defines.aisle_width}}')

// 超过两层的楼梯
mixin stairs_3(placement)
  +ng-rect(0, 0, 'scaled.aisle_width * 2', 'scaled.K')(
    style='stroke-width: 0; fill: url(#StairsPattern);')
  +ng-line('scaled.aisle_width', 0, 'scaled.aisle_width', 'scaled.K')
  +ng-line('scaled.aisle_width + 2.5', 0, 'scaled.aisle_width + 2.5', 'scaled.K')
  +ng-line(0, 'scaled.K', 'scaled.aisle_width * 2', 'scaled.K')(
    style='stroke-width: 0.5;')

  // 楼梯边缘边线
  - var x = placement == 'left' ? 0 : 'scaled.aisle_width * 2'
  +ng-line(x, '-scaled.aisle_width', x, 'scaled.K + scaled.aisle_width')(style=line_border)
  +ng-line(0, '-scaled.aisle_width',
    'scaled.aisle_width * 2', '-scaled.aisle_width')(style=line_border)
  +ng-line(0, 'scaled.K + scaled.aisle_width',
    'scaled.aisle_width * 2', 'scaled.K + scaled.aisle_width')(style=line_border)

  // 下标尺
  g(ng-attr-transform='translate(0, {{scaled.K + scaled.aisle_width + 20}})')
    +ruler('bottom', '(scaled.aisle_width)', 20, '{{defines.aisle_width}}')
    g(ng-attr-transform='translate({{scaled.aisle_width}}, 0)')
      +ruler('bottom', '(scaled.aisle_width)', 20, '{{defines.aisle_width}}')

// 门
mixin gate(placement)
  - var border_x = placement == 'left' ? 0 : 'scaled.K - 2.5'
  - var text_x = placement == 'left' ? 'scaled.K / 4' : 'scaled.K / 4 * 3'
  +ng-rect(border_x, 'scaled.K / 2', 2.5, 'scaled.K / 2')(style=rect_window)
  +ng-text(text_x, 'scaled.K - 2') M
  path(ng-attr-d='M{{scaled.K / 2}},{{scaled.K}} Q{{scaled.K / 2}},{{scaled.K / 2}} {{'+border_x+'}},{{scaled.K / 2}}'
       stroke='silver' fill='none')

// 门、窗、墙
mixin board(placement)
  - var transform = ''
  case placement
    when 'right'
      - transform = 'rotate(-90 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'back'
      - transform = 'rotate(-180 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'left'
      - transform = 'rotate(-270 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'middle'
      - transform = 'translate(0, {{-scaled.K / 2}})'

  g(ng-attr-transform=transform)
    g(ng-if='room.'+placement+' == defines.board_types.window')
      +ng-rect(0, 'scaled.K', 'scaled.K', 2.5)(style=rect_window)
      +ng-text('scaled.K / 2', 'scaled.K - 2') C
    g(ng-if='room.'+placement+' == defines.board_types.board')
      +ng-rect(0, 'scaled.K', 'scaled.K', 2.5)(style=rect_border)
    g(ng-if='room.'+placement+' == defines.board_types.gate_dual')
      +gate('left')
      +gate('right')
    g(ng-if='room.'+placement+' == defines.board_types.gate_left_left')
      +ng-rect('scaled.K / 2', 'scaled.K', 'scaled.K / 2', 2.5)(style=rect_border)
      +gate('left')
    g(ng-if='room.'+placement+' == defines.board_types.gate_left_right')
      +ng-rect('scaled.K / 2', 'scaled.K', 'scaled.K / 2', 2.5)(style=rect_border)
      g(ng-attr-transform='translate({{-scaled.K / 2}}, 0)')
        +gate('right')
    g(ng-if='room.'+placement+' == defines.board_types.gate_right_left')
      +ng-rect(0, 'scaled.K', 'scaled.K / 2', 2.5)(style=rect_border)
      g(ng-attr-transform='translate({{scaled.K / 2}}, 0)')
        +gate('left')
    g(ng-if='room.'+placement+' == defines.board_types.gate_right_right')
      +ng-rect(0, 'scaled.K', 'scaled.K / 2', 2.5)(style=rect_border)
      +gate('right')

g(transform='translate(10, 10)')
  // 纵向标尺
  g(transform='rotate(90 0,0) translate(0, -60)')
    +rulers('letter', 'metadata.height')

  g(ng-attr-transform='translate({{100 + (metadata.options.stairs.left + (metadata.layer > 6)) * scaled.aisle_width}}, 0)')
    // 左边的楼梯
    g(ng-if='metadata.options.stairs.left')
      g(ng-if='metadata.layer == 6'
        ng-attr-transform='translate({{-scaled.aisle_width}}, {{scaled.height - scaled.stairs_height}})')
        +stairs_2('left')
      g(ng-if='metadata.layer > 6'
        ng-attr-transform='translate({{-scaled.aisle_width * 2}}, {{scaled.height - scaled.K}})')
        +stairs_3('left')

    // 右边的楼梯
    g(ng-if='metadata.options.stairs.right')
      g(ng-if='metadata.layer == 6'
        ng-attr-transform='translate({{scaled.width}}, {{scaled.height - scaled.stairs_height}})')
        +stairs_2('right')
      g(ng-if='metadata.layer > 6'
        ng-attr-transform='translate({{scaled.width}}, {{scaled.height - scaled.K}})')
        +stairs_3('right')

    // 房间
    g(ng-repeat='col in rooms'
      ng-attr-transform='translate({{scaled.K * $index}}, 0)'
      font-size=16
      font-weight='bold'
      text-anchor='middle')
      g(ng-repeat='room in col'
        ng-attr-transform='translate(0, {{scaled.K * $index}})')
        +ng-rect(0, 0, 'scaled.K', 'scaled.K')(
          class='hover' click='clicked(room, col, $index)')
        +board('front')
        +board('right')
        +board('back')
        +board('left')
        +board('middle')

    // 走廊
    g(ng-attr-transform='translate(0, {{scaled.height}})')
      +ng-line(0, 'scaled.aisle_width', 'scaled.width', 'scaled.aisle_width')(
        style=line_border)
      +ng-line(0, 0, 0, 'scaled.aisle_width')(
        style=line_border if='!metadata.options.stairs.left')
      +ng-line('scaled.width', 0, 'scaled.width', 'scaled.aisle_width')(
        style=line_border if='!metadata.options.stairs.right')

      // 前置楼梯
      g(ng-attr-transform='translate(0, {{scaled.aisle_width}})')
        g(ng-if='metadata.options.stairs.front_left')
          +ng-line(0, 0, 0, 'scaled.aisle_width')(style=line_border)
          +ng-line(0, 'scaled.aisle_width',
            'scaled.K + scaled.stairs_height', 'scaled.aisle_width')(style=line_border)
          +ng-rect(2, -2, 'scaled.K', 'scaled.aisle_width')(style='fill: white; stroke: none;')
          g(ng-attr-transform='translate({{scaled.K}}, {{scaled.aisle_width}}) rotate(-90 0,0)')
            +ng-rect(0, 0, 'scaled.aisle_width', 'scaled.stairs_height')(
              style='fill: url(#StairsPattern)')
        g(ng-if='metadata.options.stairs.front_right')
          +ng-line('scaled.width', 0, 'scaled.width', 'scaled.aisle_width')(style=line_border)
          +ng-line('scaled.width', 'scaled.aisle_width',
            'scaled.width - scaled.K - scaled.stairs_height', 'scaled.aisle_width')(style=line_border)
          +ng-rect('scaled.width - scaled.K -2', -2, 'scaled.K', 'scaled.aisle_width')(style='fill: white; stroke: none;')
          g(ng-attr-transform='translate({{scaled.width - scaled.K}}, 0) rotate(90 0,0)')
            +ng-rect(0, 0, 'scaled.aisle_width', 'scaled.stairs_height')(
              style='fill: url(#StairsPattern)')

    // 横向标尺
    g(ng-attr-transform='translate(0, {{scaled.height + scaled.aisle_width * (1 + has_front_stairs) + 20}})')
      +rulers('number', 'rooms.length')
