include ../../../mixins

// 层数超过两层的楼梯
mixin stairs_3(placement)
  rect(
    stroke-width=0
    fill='url(#StairsPattern)'
    x=0 y=0
    ng-attr-width='{{scaled.aisle_width}}' ng-attr-height='{{scaled.K}}')
  line(
    ng-attr-x1='{{scaled.aisle_width}}' y1=0
    ng-attr-x2='{{scaled.aisle_width}}' ng-attr-y2='{{scaled.K}}')
  line(
    ng-attr-x1='{{scaled.aisle_width + 2.5}}' y1=0
    ng-attr-x2='{{scaled.aisle_width + 2.5}}' ng-attr-y2='{{scaled.K}}')
  rect(
    stroke-width=0
    fill='url(#StairsPattern)'
    ng-attr-x='{{scaled.aisle_width}}' y=0
    ng-attr-width='{{scaled.aisle_width}}' ng-attr-height='{{scaled.K}}')
  // 楼梯下边线
  line(
    stroke-width=0.5
    x1=0 ng-attr-y1='{{scaled.K}}'
    ng-attr-x2='{{scaled.aisle_width * 2}}' ng-attr-y2='{{scaled.K}}')
  // 楼梯边缘边线
  g
    case placement
      when 'left'
        line.border(
          x1=0 ng-attr-y1='{{-scaled.aisle_width}}'
          x2=0 ng-attr-y2='{{scaled.K + scaled.aisle_width}}')
      when 'right'
        line.border(
          ng-attr-x1='{{scaled.aisle_width * 2}}' ng-attr-y1='{{-scaled.aisle_width}}'
          ng-attr-x2='{{scaled.aisle_width * 2}}' ng-attr-y2='{{scaled.K + scaled.aisle_width}}')
    line.border(
      x1=0 ng-attr-y1='{{-scaled.aisle_width}}'
      ng-attr-x2='{{scaled.aisle_width * 2}}' ng-attr-y2='{{-scaled.aisle_width}}')
    line.border(
      x1=0 ng-attr-y1='{{scaled.K + scaled.aisle_width}}'
      ng-attr-x2='{{scaled.aisle_width * 2}}' ng-attr-y2='{{scaled.K + scaled.aisle_width}}')
  // 下标尺
  g(ng-attr-transform='translate(0, {{scaled.K + scaled.aisle_width + 20}})')
    case placement
      when 'left'
        line(x1=0 y1=0 x2=0 y2=20)
        line(ng-attr-x1='{{scaled.aisle_width}}' y1=0 ng-attr-x2='{{scaled.aisle_width}}' y2=20)
        line(x1=0 y1=15 ng-attr-x2='{{scaled.aisle_width * 2 - metadata.scale * 80}}' y2=15)
        text(ng-attr-x='{{scaled.aisle_width / 2}}' y=10 text-anchor='middle') {{defines.aisle_width}}
        text(ng-attr-x='{{scaled.aisle_width + 8}}' y=10) {{defines.aisle_width}}
      when 'right'
        line(
          ng-attr-x1='{{scaled.aisle_width * 2}}' y1=0
          ng-attr-x2='{{scaled.aisle_width * 2}}' y2=20)
        line(ng-attr-x1='{{scaled.aisle_width + 2}}' y1=0 ng-attr-x2='{{scaled.aisle_width + 2}}' y2=20)
        line(x1=2 y1=15 ng-attr-x2='{{scaled.aisle_width * 2 - metadata.scale * 80 + 2}}' y2=15)
        text(ng-attr-x='{{scaled.aisle_width / 2 + 2}}' y=10 text-anchor='middle') {{defines.aisle_width}}
        text(ng-attr-x='{{scaled.aisle_width + 10}}' y=10) {{defines.aisle_width}}

// 门
mixin gate(placement)
  case placement
    when 'left'
      - var border_x = 0
      - var text_x = 'scaled.K / 4'
    when 'right'
      - var border_x = 'scaled.K - 2.5'
      - var text_x = 'scaled.K / 4 * 3'

  +ng-rect(border_x, 'scaled.K / 2', 2.5, 'scaled.K / 2')(class='window')
  +ng-text(text_x, 'scaled.K - 2') M
  path(
    ng-attr-d='M{{scaled.K / 2}},{{scaled.K}} Q{{scaled.K / 2}},{{scaled.K / 2}} {{'+border_x+'}},{{scaled.K / 2}}'
    stroke='silver' fill='none')

// 门、窗、墙
mixin board(placement)
  case placement
    when 'front'
      - var transform = ''
    when 'right'
      - var transform = 'rotate(-90 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'back'
      - var transform = 'rotate(-180 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'left'
      - var transform = 'rotate(-270 {{scaled.K / 2}}, {{scaled.K / 2}})'
    when 'middle'
      - var transform = 'translate(0, {{-scaled.K / 2}})'

  g(ng-attr-transform=transform)
    g(ng-if='room.'+placement+' == defines.board_types.window')
      +ng-rect(0, 'scaled.K', 'scaled.K', 2.5)(class='window')
      +ng-text('scaled.K / 2', 'scaled.K - 2') C
    g(ng-if='room.'+placement+' == defines.board_types.board')
      +ng-rect(0, 'scaled.K', 'scaled.K', 2.5)(class='board')
    g(ng-if='room.'+placement+' == defines.board_types.gate_dual')
      +gate('left')
      +gate('right')
    g(ng-if='room.'+placement+' == defines.board_types.gate_left_left')
      +ng-rect('scaled.K / 2', 'scaled.K', 'scaled.K / 2', 2.5)(class='board')
      +gate('left')
    g(ng-if='room.'+placement+' == defines.board_types.gate_left_right')
      +ng-rect('scaled.K / 2', 'scaled.K', 'scaled.K / 2', 2.5)(class='board')
      g(ng-attr-transform='translate({{-scaled.K / 2}}, 0)')
        +gate('right')
    g(ng-if='room.'+placement+' == defines.board_types.gate_right_left')
      +ng-rect(0, 'scaled.K', 'scaled.K / 2', 2.5)(class='board')
      g(ng-attr-transform='translate({{scaled.K / 2}}, 0)')
        +gate('left')
    g(ng-if='room.'+placement+' == defines.board_types.gate_right_right')
      +ng-rect(0, 'scaled.K', 'scaled.K / 2', 2.5)(class='board')
      +gate('right')

g(transform='translate(10, 10)')
  // 纵向标尺
  g(transform='translate(0, 0)' letter-spacing=-3)
    g
      line(x1=50 y1=0 x2=50 ng-attr-y2='{{scaled.height}}')
      line(
        x1=30 ng-attr-y1='{{-metadata.scale * 80}}'
        x2=30 ng-attr-y2='{{scaled.height + metadata.scale * 80}}')
    g
      line(
        x1=22 ng-attr-y1='{{-metadata.scale * 80}}'
        x2=70 ng-attr-y2='{{-metadata.scale * 80}}')
      line(
        x1=22 ng-attr-y1='{{scaled.height + metadata.scale * 80}}'
        x2=70 ng-attr-y2='{{scaled.height + metadata.scale * 80}}')
    g.text-vertical
      text(x=22 ng-attr-y='{{scaled.height / 2}}' text-anchor='middle')
        | {{metadata.height * defines.K + 160}}
      text(x=74 y=0 text-anchor='middle') 80
      text(x=74 ng-attr-y='{{scaled.height + 2}}' text-anchor='middle') 80
    g(
      ng-repeat='i in _.range(metadata.height)'
      ng-attr-transform='translate(0, {{scaled.K * $index}})')
      line(x1=10 y1=0 x2=70 y2=0)
      text.text-vertical(x=44 ng-attr-y='{{scaled.K / 2}}' text-anchor='middle')
        tspan {{defines.K}}
      g
        circle(cx=0 cy=0 r=8 fill='transparent' stroke='black')
        text(x=-3 y=3) {{$index|letter}}
      g(ng-attr-transform='translate(0, {{scaled.K}})' ng-if='$last')
        line(x1=10 y1=0 x2=70 y2=0)
        g
          circle(cx=0 cy=0 r=8 fill='transparent' stroke='black')
          text(x=-3 y=3) {{$index + 1|letter}}

    // 走廊标尺
    g(ng-attr-transform='translate(50, {{scaled.height}})')
      line(x1=0 ng-attr-y1='{{metadata.scale * 80}}' x2=0 ng-attr-y2='{{scaled.aisle_width}}')
      line(x1=-10 ng-attr-y1='{{scaled.aisle_width}}' x2=20 ng-attr-y2='{{scaled.aisle_width}}')
      text.text-vertical(x=-6 ng-attr-y='{{scaled.aisle_width / 2}}' text-anchor='middle')
        tspan {{defines.aisle_width}}

  g(ng-attr-transform='translate({{100 + (metadata.options.stairs.left + (metadata.layer > 6)) * scaled.aisle_width}}, 0)')
    // 只有两层时的左楼梯
    g(
      ng-if='metadata.options.stairs.left && metadata.layer == 6'
      ng-attr-transform='translate({{-scaled.aisle_width}}, {{scaled.height - scaled.stairs_height}})')
      rect(
        fill='url(#StairsPattern)'
        x=0 y=0
        ng-attr-width='{{scaled.aisle_width}}' ng-attr-height='{{scaled.stairs_height}}')
      line.border(
        x1=0 ng-attr-y1='{{scaled.stairs_height + scaled.aisle_width}}'
        ng-attr-x2='{{scaled.aisle_width}}' ng-attr-y2='{{scaled.stairs_height + scaled.aisle_width}}')
      line.border(
        x1=0 y1=0 x2=0 ng-attr-y2='{{scaled.stairs_height + scaled.aisle_width}}')
      // 下标尺
      g(ng-attr-transform='translate(0, {{scaled.stairs_height + scaled.aisle_width + 20}})')
        +ruler('bottom',
          '(scaled.aisle_width - metadata.scale * 80)', 24, '{{defines.aisle_width}}')

    // 层数超过两层时的左楼梯
    g(
      ng-if='metadata.options.stairs.left && metadata.layer > 6'
      ng-attr-transform='translate({{-scaled.aisle_width * 2}}, {{scaled.height - scaled.K}})')
      +stairs_3('left')

    // 右楼梯
    g(
      ng-if='metadata.options.stairs.right && metadata.layer == 6'
      ng-attr-transform='translate({{scaled.width}}, {{scaled.height - scaled.stairs_height}})')
      rect(
        fill='url(#StairsPattern)'
        x=0 y=0
        ng-attr-width='{{scaled.aisle_width}}' ng-attr-height='{{scaled.stairs_height}}')
      line.border(
        x1=0 ng-attr-y1='{{scaled.stairs_height + scaled.aisle_width}}'
        ng-attr-x2='{{scaled.aisle_width}}' ng-attr-y2='{{scaled.stairs_height + scaled.aisle_width}}')
      line.border(
        ng-attr-x1='{{scaled.aisle_width}}' y1=0
        ng-attr-x2='{{scaled.aisle_width}}' ng-attr-y2='{{scaled.stairs_height + scaled.aisle_width}}')
      // 下标尺
      g(ng-attr-transform='translate(0, {{scaled.stairs_height + scaled.aisle_width + 20}})')
        line(ng-attr-x1='{{scaled.aisle_width}}' y1=0 ng-attr-x2='{{scaled.aisle_width}}' y2=20)
        line(ng-attr-x1='{{metadata.scale * 80}}' y1=15 ng-attr-x2='{{scaled.aisle_width}}' y2=15)
        text(ng-attr-x='{{scaled.aisle_width / 2}}' y=10 text-anchor='middle') {{defines.aisle_width}}

    // 层数超过两层时的右楼梯
    g(
      ng-if='metadata.options.stairs.right && metadata.layer > 6'
      ng-attr-transform='translate({{scaled.width}}, {{scaled.height - scaled.K}})')
      +stairs_3('right')

    // 房间
    g(
      ng-repeat='col in rooms'
      ng-attr-transform='translate({{scaled.K * $index}}, 0)'
      font-size=16
      font-weight='bold'
      text-anchor='middle')
      g(
        ng-repeat='room in col'
        ng-attr-transform='translate(0, {{scaled.K * $index}})')
        +ng-rect(0, 0, 'scaled.K', 'scaled.K')(
          class='hover' click='clicked(room, col, $index)')
        +board('front')
        +board('right')
        +board('back')
        +board('left')
        +board('middle')

    // 走廊
    g(ng-attr-transform='translate(0, {{scaled.height}})')
      - var style='stroke-width: 3; stroke: gray;'
      +ng-line(0, 'scaled.aisle_width', 'scaled.width', 'scaled.aisle_width')(
        style=style)
      +ng-line(0, 0, 0, 'scaled.aisle_width')(
        style=style if='!metadata.options.stairs.left')
      +ng-line('scaled.width', 0, 'scaled.width', 'scaled.aisle_width')(
        style=style if='!metadata.options.stairs.right')

    // 横向标尺
    g(ng-attr-transform='translate(0, {{scaled.height + scaled.aisle_width + 20}})')
      g
        line(x1=0 y1=15 ng-attr-x2='{{scaled.width}}' y2=15)
        line(
          ng-attr-x1='{{-metadata.scale * 80}}' y1=35
          ng-attr-x2='{{scaled.width + metadata.scale * 80}}' y2=35)
      g
        line(
          ng-attr-x1='{{-metadata.scale * 80}}' y1=0
          ng-attr-x2='{{-metadata.scale * 80}}' y2=40)
        line(
          ng-attr-x1='{{scaled.width + metadata.scale * 80}}' y1=0
          ng-attr-x2='{{scaled.width + metadata.scale * 80}}' y2=40)
      text.text-middle
        tspan(ng-attr-x='{{scaled.width / 2}}' y=32)
          | {{metadata.width * defines.K + 160}}
      g
        text(x=-6 y=0) 80
        text(ng-attr-x='{{scaled.width - 3}}' y=0) 80
      g(
        ng-repeat='room in rooms'
        ng-attr-transform='translate({{scaled.K * $index}}, 0)')
        line(x1=0 y1=0 x2=0 y2=50)
        line(
          ng-if='$last'
          ng-attr-x1='{{scaled.K}}' y1=0
          ng-attr-x2='{{scaled.K}}' y2=50)
        text.text-middle(ng-attr-x='{{scaled.K / 2}}' y=10) {{defines.K}}
        g(transform='translate(0, 60)')
          circle(cx=0 cy=0 r=8 fill='transparent' stroke='black')
          text(x=-3 y=3) {{$index + 1}}
        g(ng-attr-transform='translate({{scaled.K}}, 60)' ng-if='$last')
          circle(cx=0 cy=0 r=8 fill='transparent' stroke='black')
          text(x=-4 y=3) {{$index + 2}}
